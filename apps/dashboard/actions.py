import csv
from django.utils.encoding import smart_str
from django.http import HttpResponse
from datetime import datetime


def export_csv(request, queryset):
    '''
    PlayerName y PlayerAddress es para los usuarios due√±os de las cuentas
    '''
    response = HttpResponse(content_type='text/csv')
    response['Content-Disposition'] = 'attachment; filename=towi_kids_data{}.csv'.format(datetime.now().date())
    writer = csv.writer(response, csv.excel)
    response.write(u'\ufeff'.encode('utf8'))  # NOQA
    writer.writerow([
        smart_str("parent email"),
        smart_str("parent name"),
        smart_str("parent lastname"),
        smart_str("id child"),
        smart_str("child name"),
        smart_str("child lastname"),
        smart_str("dob"),
        smart_str("grade"),
        smart_str("genre"),
        smart_str("laterality"),
        smart_str("videogames:usage"),
        smart_str("learning_disabilities"),
        smart_str("failed_grades"),
        smart_str("egular_special"),
        smart_str("mixed_differentiated"),
        smart_str("city"),
        smart_str("version"),
        smart_str("date"),
        smart_str("device"),
        smart_str("application_number"),
        smart_str("boarding_latency"),
        smart_str("id test"),
        smart_str("version"),
        smart_str("application_number"),
        smart_str("boarding_latency"),
        smart_str("playerage"),
        smart_str("playerbirthday"),
        smart_str("inputagetimeofcomp"),
        smart_str("playername"),
        smart_str("playeraddress"),
        smart_str("playercurrentdate"),
        smart_str("buytickettimeofcomp"),
        smart_str("packforward_tutorial"),
        smart_str("packnormalscore"),
        smart_str("packforward_time"),
        smart_str("packforward_correct_mlatency"),
        smart_str("packforward_incorrect_secuence"),
        smart_str("packforward_instrusions"),
        smart_str("packbackward_tutorial"),
        smart_str("packreversescore"),
        smart_str("packbackward_time"),
        smart_str("packbackward_incorrect_secuence"),
        smart_str("packbackward_intrusions"),
        smart_str("packtimeofcomp"),
        smart_str("weather_latency"),
        smart_str("weatherobjectpacked"),
        smart_str("weathercongruence"),
        smart_str("weather_time"),
        smart_str("lab_start_level"),
        smart_str("lab1time"),
        smart_str("lab2time"),
        smart_str("lab3time"),
        smart_str("lab1latency"),
        smart_str("lab2latency"),
        smart_str("lab3latency"),
        smart_str("lab1hits"),
        smart_str("lab2hits"),
        smart_str("lab3hits"),
        smart_str("lab1crosses"),
        smart_str("lab2crosses"),
        smart_str("lab3crosses"),
        smart_str("lab1deadends"),
        smart_str("lab2deadends"),
        smart_str("lab3deadends"),
        smart_str("lab1_changeofroutes"),
        smart_str("lab2_changeofroutes"),
        smart_str("lab3_changeofroutes"),
        smart_str("labxhits"),
        smart_str("labxcrosses"),
        smart_str("labxdeadends"),
        smart_str("labtimeofcomp"),
        smart_str("waitroomcorrect"),
        smart_str("waitroomincorrect"),
        smart_str("waitroom_correct_mlatency"),
        smart_str("waitroom_incorrect_mlatency"),
        smart_str("waitroom_tutorial"),
        smart_str("flyplane_tutorial"),
        smart_str("flyplane_series"),
        smart_str("flyplanecorrect"),
        smart_str("flyplaneincorrect"),
        smart_str("flyplanemissed"),
        smart_str("flyplanegreencorrect"),
        smart_str("flyplanegreenincorrect"),
        smart_str("flyplanegreenmissed"),
        smart_str("flyplane_correct_mlatency"),
        smart_str("flyplane_incorrect_mlatency"),
        smart_str("flyplane_greencorrect_mlatency"),
        smart_str("flyplane_greenincorrect_mlatency"),
        smart_str("flyplanetimeofcomp"),
        smart_str("coins_tutorial"),
        smart_str("coins_level"),
        smart_str("coinsmincorrect"),
        smart_str("coinsminincorrect"),
        smart_str("coinsextracorrect"),
        smart_str("coinsextraincorrect"),
        smart_str("coinsextramissed"),
        smart_str("coins_correct_mlatency"),
        smart_str("coins_incorrect_mlatency"),
        smart_str("coinsselected"),
        smart_str("coinspatterntype"),
        smart_str("coins_organization_score"),
        smart_str("coinsclicksbeforemin"),
        smart_str("coinstimeofcomp"),
        smart_str("unpack_correct"),
        smart_str("unpack_incorrect"),
        smart_str("unpack_perseveration"),
        smart_str("unpack_first_correct"),
        smart_str("unpack_bad_recognition"),
        smart_str("unpack_time"),
        smart_str("arrange_amplitude"),
        smart_str("unpacks1correct"),
        smart_str("unpacks2correct"),
        smart_str("unpacks3correct"),
        smart_str("unpacks1incorrect"),
        smart_str("unpacks2incorrect"),
        smart_str("unpacks3incorrect"),
        smart_str("unpacks1repeated"),
        smart_str("unpacks2repeated"),
        smart_str("unpacks3repeated"),
        smart_str("arrange_learningcurve"),
        smart_str("unpackfourfirstsample"),
        smart_str("unpackfourlastsample"),
        smart_str("arrange_spacialprecision_score"),
        smart_str("arrange_storage_efficency1"),
        smart_str("arrange_storage_efficency2"),
        smart_str("arrange_incorrect_repeated"),
        smart_str("arrange_correct_mlatency"),
        smart_str("arrange_incorrect_mlatency"),
        smart_str("unpacktimeofcomp"),
        smart_str("totaltesttime"),
        smart_str("unpackperctotalcorrect"),
        smart_str("unpackspacialprecisionsample")
    ])
    for obj in queryset:
        try:
            writer.writerow([
                smart_str(obj.header.cid.user.email),
                smart_str(obj.header.cid.user.first_name),
                smart_str(obj.header.cid.user.last_name),
                smart_str(obj.header.cid.id),
                smart_str(obj.header.cid.first_name),
                smart_str(obj.header.cid.last_name),
                smart_str(obj.header.cid.dob),
                smart_str(obj.header.cid.grade),
                smart_str(obj.header.cid.genre),
                smart_str(""),  # laterality
                smart_str(""),  # videogames usage
                smart_str(""),  # learning_disabilities
                smart_str(""),  # failed_grades
                smart_str(""),  # regular_special
                smart_str(""),  # mixed_differentiated
                smart_str(obj.header.cid.user.country),
                smart_str(""),  # version
                smart_str(obj.header.date.strftime('%Y-%m-%dT%H:%M:%S')),
                smart_str(""),  # device
                smart_str(""),  # application_number
                smart_str(""),  # boarding_latency
                smart_str(obj.id),
                smart_str(obj.version),
                smart_str(obj.application_number),
                smart_str(obj.boarding_latency),
                smart_str(obj.playerage),
                smart_str(obj.playerbirthday),
                smart_str(obj.inputagetimeofcomp),
                smart_str(obj.playername),
                smart_str(obj.playeraddress),
                smart_str(obj.playercurrentdate),
                smart_str(obj.buytickettimeofcomp),
                smart_str(obj.packforward_tutorial),
                smart_str(obj.packnormalscore),
                smart_str(obj.packforward_time),
                smart_str(obj.packforward_correct_mlatency),
                smart_str(obj.packforward_incorrect_secuence),
                smart_str(obj.packforward_instrusions),
                smart_str(obj.packbackward_tutorial),
                smart_str(obj.packreversescore),
                smart_str(obj.packbackward_time),
                smart_str(obj.packbackward_incorrect_secuence),
                smart_str(obj.packbackward_intrusions),
                smart_str(obj.packtimeofcomp),
                smart_str(obj.weather_latency),
                smart_str(obj.weatherobjectpacked),
                smart_str(obj.weathercongruence),
                smart_str(obj.weather_time),
                smart_str(obj.lab_start_level),
                smart_str(obj.lab1time),
                smart_str(obj.lab2time),
                smart_str(obj.lab3time),
                smart_str(obj.lab1latency),
                smart_str(obj.lab2latency),
                smart_str(obj.lab3latency),
                smart_str(obj.lab1hits),
                smart_str(obj.lab2hits),
                smart_str(obj.lab3hits),
                smart_str(obj.lab1crosses),
                smart_str(obj.lab2crosses),
                smart_str(obj.lab3crosses),
                smart_str(obj.lab1deadends),
                smart_str(obj.lab2deadends),
                smart_str(obj.lab3deadends),
                smart_str(obj.lab1_changeofroutes),
                smart_str(obj.lab2_changeofroutes),
                smart_str(obj.lab3_changeofroutes),
                smart_str(obj.labxhits),
                smart_str(obj.labxcrosses),
                smart_str(obj.labxdeadends),
                smart_str(obj.labtimeofcomp),
                smart_str(obj.waitroomcorrect),
                smart_str(obj.waitroomincorrect),
                smart_str(obj.waitroom_correct_mlatency),
                smart_str(obj.waitroom_incorrect_mlatency),
                smart_str(obj.waitroom_tutorial),
                smart_str(obj.flyplane_tutorial),
                smart_str(obj.flyplane_series),
                smart_str(obj.flyplanecorrect),
                smart_str(obj.flyplaneincorrect),
                smart_str(obj.flyplanemissed),
                smart_str(obj.flyplanegreencorrect),
                smart_str(obj.flyplanegreenincorrect),
                smart_str(obj.flyplanegreenmissed),
                smart_str(obj.flyplane_correct_mlatency),
                smart_str(obj.flyplane_incorrect_mlatency),
                smart_str(obj.flyplane_greencorrect_mlatency),
                smart_str(obj.flyplane_greenincorrect_mlatency),
                smart_str(obj.flyplanetimeofcomp),
                smart_str(obj.coins_tutorial),
                smart_str(obj.coins_level),
                smart_str(obj.coinsmincorrect),
                smart_str(obj.coinsminincorrect),
                smart_str(obj.coinsextracorrect),
                smart_str(obj.coinsextraincorrect),
                smart_str(obj.coinsextramissed),
                smart_str(obj.coins_correct_mlatency),
                smart_str(obj.coins_incorrect_mlatency),
                smart_str(obj.coinsselected),
                smart_str(obj.coinspatterntype),
                smart_str(obj.coins_organization_score),
                smart_str(obj.coinsclicksbeforemin),
                smart_str(obj.coinstimeofcomp),
                smart_str(obj.unpack_correct),
                smart_str(obj.unpack_incorrect),
                smart_str(obj.unpack_perseveration),
                smart_str(obj.unpack_first_correct),
                smart_str(obj.unpack_bad_recognition),
                smart_str(obj.unpack_time),
                smart_str(obj.arrange_amplitude),
                smart_str(obj.unpacks1correct),
                smart_str(obj.unpacks2correct),
                smart_str(obj.unpacks3correct),
                smart_str(obj.unpacks1incorrect),
                smart_str(obj.unpacks2incorrect),
                smart_str(obj.unpacks3incorrect),
                smart_str(obj.unpacks1repeated),
                smart_str(obj.unpacks2repeated),
                smart_str(obj.unpacks3repeated),
                smart_str(obj.arrange_learningcurve),
                smart_str(obj.unpackfourfirstsample),
                smart_str(obj.unpackfourlastsample),
                smart_str(obj.arrange_spacialprecision_score),
                smart_str(obj.arrange_storage_efficency1),
                smart_str(obj.arrange_storage_efficency2),
                smart_str(obj.arrange_incorrect_repeated),
                smart_str(obj.arrange_correct_mlatency),
                smart_str(obj.arrange_incorrect_mlatency),
                smart_str(obj.unpacktimeofcomp),
                smart_str(obj.totaltesttime),
                smart_str(obj.unpackperctotalcorrect),
                smart_str(obj.unpackspacialprecisionsample)
            ])
        except Exception as e:
            print(e)
    return response


def export_csv_own_kids(request, queryset):
    '''
    PlayerName y PlayerAddress es para los usuarios due√±os de las cuentas
    '''
    response = HttpResponse(content_type='text/csv')
    response['Content-Disposition'] = 'attachment; filename=towi_kids_data{}.csv'.format(datetime.now().date())
    writer = csv.writer(response, csv.excel)
    response.write(u'\ufeff'.encode('utf8'))  # NOQA
    writer.writerow([
        smart_str("id child"),
        smart_str("dob"),
        smart_str("grade"),
        smart_str("genre"),
        smart_str("laterality"),
        smart_str("videogames:usage"),
        smart_str("learning_disabilities"),
        smart_str("failed_grades"),
        smart_str("egular_special"),
        smart_str("mixed_differentiated"),
        smart_str("city"),
        smart_str("version"),
        smart_str("date"),
        smart_str("device"),
        smart_str("application_number"),
        smart_str("boarding_latency"),
        smart_str("id test"),
        smart_str("playername"),
        smart_str("playeraddress"),
        smart_str("playerage"),
        smart_str("playerbirthday"),
        smart_str("inputagetimeofcomp"),
        smart_str("playercurrentdate"),
        smart_str("buytickettimeofcomp"),
        smart_str("packnormalscore"),
        smart_str("packreversescore"),
        smart_str("packtimeofcomp"),
        smart_str("weatherpacktype"),
        smart_str("weatherobjectpacked"),
        smart_str("weathercongruence"),
        smart_str("unpacktoremember"),
        smart_str("lab1time"),
        smart_str("lab2time"),
        smart_str("lab3time"),
        smart_str("lab1latency"),
        smart_str("lab2latency"),
        smart_str("lab3latency"),
        smart_str("lab1hits"),
        smart_str("lab2hits"),
        smart_str("lab3hits"),
        smart_str("lab1crosses"),
        smart_str("lab2crosses"),
        smart_str("lab3crosses"),
        smart_str("lab1deadends"),
        smart_str("lab2deadends"),
        smart_str("lab3deadends"),
        smart_str("labtotalhits"),
        smart_str("labtotalcrosses"),
        smart_str("labtotaldeadends"),
        smart_str("labxhits"),
        smart_str("labxcrosses"),
        smart_str("labxdeadends"),
        smart_str("labtimeofcomp"),
        smart_str("waitroomcorrect"),
        smart_str("waitroomincorrect"),
        smart_str("waitroommissed"),
        smart_str("timebetweenflights"),
        smart_str("flyplanecorrect"),
        smart_str("flyplaneincorrect"),
        smart_str("flyplanemissed"),
        smart_str("flyplanegreencorrect"),
        smart_str("flyplanegreenincorrect"),
        smart_str("flyplanegreenmissed"),
        smart_str("flyplanetimeforinput"),
        smart_str("flyplanetimeofcomp"),
        smart_str("coinsmincorrect"),
        smart_str("coinsminincorrect"),
        smart_str("coinsminmissed"),
        smart_str("coinsextracorrect"),
        smart_str("coinsextraincorrect"),
        smart_str("coinsextramissed"),
        smart_str("coinspatterntype"),
        smart_str("coinsselected"),
        smart_str("coinsclicksbeforemin"),
        smart_str("coinstimeofcomp"),
        smart_str("unpackfirstselected"),
        smart_str("unpackfirstcorrect"),
        smart_str("unpackfirstperc"),
        smart_str("unpacks1correct"),
        smart_str("unpacks2correct"),
        smart_str("unpacks3correct"),
        smart_str("unpacks1incorrect"),
        smart_str("unpacks2incorrect"),
        smart_str("unpacks3incorrect"),
        smart_str("unpacks1repeated"),
        smart_str("unpacks2repeated"),
        smart_str("unpacks3repeated"),
        smart_str("unpackfourfirstsample"),
        smart_str("unpackfourlastsample"),
        smart_str("unpackgroupingsample"),
        smart_str("unpackspacialprecisionsample"),
        smart_str("unpackpictime"),
        smart_str("unpacktimeofcomp"),
        smart_str("unpacktotalcorrect"),
        smart_str("unpackxtotalcorrect"),
        smart_str("unpackperctotalcorrect"),
        smart_str("unpacktotalincorrect"),
        smart_str("unpackxtotalincorrect"),
        smart_str("unpackperctotalincorrect")
    ])
    for obj in queryset:
        try:
            writer.writerow([
                smart_str(obj.header.cid.id),
                smart_str(obj.header.cid.dob),
                smart_str(obj.header.cid.grade),
                smart_str(obj.header.cid.genre),
                smart_str(""),  # laterality
                smart_str(""),  # videogames usage
                smart_str(""),  # learning_disabilities
                smart_str(""),  # failed_grades
                smart_str(""),  # regular_special
                smart_str(""),  # mixed_differentiated
                smart_str(obj.header.cid.user.country),
                smart_str(""),  # version
                smart_str(obj.header.date.strftime('%Y-%m-%dT%H:%M:%S')),
                smart_str(""),  # device
                smart_str(""),  # application_number
                smart_str(""),  # boarding_latency
                smart_str(obj.id),
                smart_str(obj.playername),
                smart_str(obj.playeraddress),
                smart_str(obj.playerage),
                smart_str(obj.playerbirthday),
                smart_str(obj.inputagetimeofcomp),
                smart_str(obj.playercurrentdate),
                smart_str(obj.buytickettimeofcomp),
                smart_str(obj.packnormalscore),
                smart_str(obj.packreversescore),
                smart_str(obj.packtimeofcomp),
                smart_str(obj.weatherpacktype),
                smart_str(obj.weatherobjectpacked),
                smart_str(obj.weathercongruence),
                smart_str(obj.unpacktoremember),
                smart_str(obj.lab1time),
                smart_str(obj.lab2time),
                smart_str(obj.lab3time),
                smart_str(obj.lab1latency),
                smart_str(obj.lab2latency),
                smart_str(obj.lab3latency),
                smart_str(obj.lab1hits),
                smart_str(obj.lab2hits),
                smart_str(obj.lab3hits),
                smart_str(obj.lab1crosses),
                smart_str(obj.lab2crosses),
                smart_str(obj.lab3crosses),
                smart_str(obj.lab1deadends),
                smart_str(obj.lab2deadends),
                smart_str(obj.lab3deadends),
                smart_str(obj.labtotalhits),
                smart_str(obj.labtotalcrosses),
                smart_str(obj.labtotaldeadends),
                smart_str(obj.labxhits),
                smart_str(obj.labxcrosses),
                smart_str(obj.labxdeadends),
                smart_str(obj.labtimeofcomp),
                smart_str(obj.waitroomcorrect),
                smart_str(obj.waitroomincorrect),
                smart_str(obj.waitroommissed),
                smart_str(obj.timebetweenflights),
                smart_str(obj.flyplanecorrect),
                smart_str(obj.flyplaneincorrect),
                smart_str(obj.flyplanemissed),
                smart_str(obj.flyplanegreencorrect),
                smart_str(obj.flyplanegreenincorrect),
                smart_str(obj.flyplanegreenmissed),
                smart_str(obj.flyplanetimeforinput),
                smart_str(obj.flyplanetimeofcomp),
                smart_str(obj.coinsmincorrect),
                smart_str(obj.coinsminincorrect),
                smart_str(obj.coinsminmissed),
                smart_str(obj.coinsextracorrect),
                smart_str(obj.coinsextraincorrect),
                smart_str(obj.coinsextramissed),
                smart_str(obj.coinspatterntype),
                smart_str(obj.coinsselected),
                smart_str(obj.coinsclicksbeforemin),
                smart_str(obj.coinstimeofcomp),
                smart_str(obj.unpackfirstselected),
                smart_str(obj.unpackfirstcorrect),
                smart_str(obj.unpackfirstperc),
                smart_str(obj.unpacks1correct),
                smart_str(obj.unpacks2correct),
                smart_str(obj.unpacks3correct),
                smart_str(obj.unpacks1incorrect),
                smart_str(obj.unpacks2incorrect),
                smart_str(obj.unpacks3incorrect),
                smart_str(obj.unpacks1repeated),
                smart_str(obj.unpacks2repeated),
                smart_str(obj.unpacks3repeated),
                smart_str(obj.unpackfourfirstsample),
                smart_str(obj.unpackfourlastsample),
                smart_str(obj.unpackgroupingsample),
                smart_str(obj.unpackspacialprecisionsample),
                smart_str(obj.unpackpictime),
                smart_str(obj.unpacktimeofcomp),
                smart_str(obj.unpacktotalcorrect),
                smart_str(obj.unpackxtotalcorrect),
                smart_str(obj.unpackperctotalcorrect),
                smart_str(obj.unpacktotalincorrect),
                smart_str(obj.unpackxtotalincorrect),
                smart_str(obj.unpackperctotalincorrect)
            ])
        except Exception as e:
            pass
    return response
