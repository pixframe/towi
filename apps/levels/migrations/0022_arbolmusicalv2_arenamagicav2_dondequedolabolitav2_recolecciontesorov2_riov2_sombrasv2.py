# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2019-02-06 19:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('levels', '0021_auto_20190205_1901'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArbolMusicalV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_level', models.IntegerField(blank=True, null=True)),
                ('initial_difficulty', models.IntegerField(blank=True, null=True)),
                ('session_correct_percentage', models.FloatField(blank=True, null=True)),
                ('session_errors_percentage', models.FloatField(blank=True, null=True)),
                ('played_difficulty', models.CharField(blank=True, max_length=500, null=True)),
                ('played_levels', models.CharField(blank=True, max_length=500, null=True)),
                ('final_level', models.IntegerField(blank=True, null=True)),
                ('final_difficulty', models.IntegerField(blank=True, null=True)),
                ('dad_bird_listened_pre', models.CharField(blank=True, max_length=500, null=True)),
                ('dad_bird_listened_post', models.CharField(blank=True, max_length=500, null=True)),
                ('correct_before_clue', models.CharField(blank=True, max_length=500, null=True)),
                ('errors_before_clue', models.CharField(blank=True, max_length=500, null=True)),
                ('correct_after_clue', models.CharField(blank=True, max_length=500, null=True)),
                ('errors_after_clue', models.CharField(blank=True, max_length=500, null=True)),
                ('total_clues', models.CharField(blank=True, max_length=500, null=True)),
                ('total_correct', models.CharField(blank=True, max_length=500, null=True)),
                ('total_errors', models.CharField(blank=True, max_length=500, null=True)),
                ('essay_time', models.CharField(blank=True, max_length=500, null=True)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arbolMusicalv2', to='levels.Header')),
            ],
            options={
                'verbose_name': 'Arbol Musical',
            },
        ),
        migrations.CreateModel(
            name='ArenaMagicaV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_level_motor', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('initial_level_overlapping', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('initial_level_clousre', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('current_level', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('current_level_motor', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('current_level_overlapping', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('current_level_clousre', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('session_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('session_overdraw_percentage', models.FloatField(blank=True, null=True)),
                ('session_accuracy_percentage', models.FloatField(blank=True, null=True)),
                ('types_levels', models.CharField(blank=True, max_length=500, null=True)),
                ('played_levels', models.CharField(blank=True, max_length=500, null=True)),
                ('time_percentage', models.CharField(blank=True, max_length=500, null=True)),
                ('accuracy', models.CharField(blank=True, max_length=500, null=True)),
                ('overdraw', models.CharField(blank=True, max_length=500, null=True)),
                ('change_level_motor', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('change_level_overlapping', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('change_level_clousure', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arenaMagicav2', to='levels.Header')),
            ],
            options={
                'verbose_name': 'Arena MÃ¡gica',
            },
        ),
        migrations.CreateModel(
            name='DondeQuedoLaBolitaV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_level', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('initial_difficulty', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('current_level', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('current_difficulty', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('session_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('session_correct_percentage', models.FloatField(blank=True, null=True)),
                ('session_errors_percentage', models.FloatField(blank=True, null=True)),
                ('played_levels', models.CharField(blank=True, max_length=500, null=True)),
                ('played_difficulty', models.CharField(blank=True, max_length=500, null=True)),
                ('session_time', models.FloatField(blank=True, null=True)),
                ('correct_monkeys', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('errors_monkeys', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('latency', models.CharField(blank=True, max_length=500, null=True)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bolitav2', to='levels.Header')),
            ],
            options={
                'verbose_name': 'Donde quedo la bolita',
            },
        ),
        migrations.CreateModel(
            name='RecoleccionTesoroV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_level', models.IntegerField(blank=True, null=True)),
                ('initial_difficulty', models.IntegerField(blank=True, null=True)),
                ('current_level', models.IntegerField(blank=True, null=True)),
                ('current_difficulty', models.IntegerField(blank=True, null=True)),
                ('session_correct_total', models.IntegerField(blank=True, null=True)),
                ('session_errors_total', models.IntegerField(blank=True, null=True)),
                ('total_second_chances', models.IntegerField(blank=True, null=True)),
                ('diffrence_in_quantity', models.IntegerField(blank=True, null=True)),
                ('played_levels', models.CharField(blank=True, max_length=500, null=True)),
                ('played_difficulty', models.CharField(blank=True, max_length=500, null=True)),
                ('session_minobjects', models.IntegerField(blank=True, null=True)),
                ('session_maxobjects', models.IntegerField(blank=True, null=True)),
                ('session_time', models.FloatField(blank=True, null=True)),
                ('requestreminder', models.IntegerField(blank=True, null=True)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tesorov2', to='levels.Header')),
            ],
            options={
                'verbose_name': 'Tesoro',
            },
        ),
        migrations.CreateModel(
            name='RioV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_level', models.IntegerField(blank=True, null=True)),
                ('initial_difficulty', models.IntegerField(blank=True, null=True)),
                ('current_level', models.IntegerField(blank=True, null=True)),
                ('current_difficulty', models.IntegerField(blank=True, null=True)),
                ('session_correct_total', models.IntegerField(blank=True, null=True)),
                ('session_errors_total', models.IntegerField(blank=True, null=True)),
                ('played_levels', models.CharField(blank=True, max_length=500, null=True)),
                ('played_difficulty', models.CharField(blank=True, max_length=500, null=True)),
                ('target_total', models.IntegerField(blank=True, null=True)),
                ('target_correct', models.IntegerField(blank=True, null=True)),
                ('target_errors', models.IntegerField(blank=True, null=True)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riov2', to='levels.Header')),
            ],
            options={
                'verbose_name': 'Rio',
            },
        ),
        migrations.CreateModel(
            name='SombrasV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_level', models.IntegerField(blank=True, null=True)),
                ('current_level', models.IntegerField(blank=True, null=True)),
                ('session_correct_percentage', models.FloatField(blank=True, null=True)),
                ('session_errors_percentage', models.FloatField(blank=True, null=True)),
                ('played_levels', models.CharField(blank=True, max_length=500, null=True)),
                ('latencies', models.CharField(blank=True, max_length=500, null=True)),
                ('session_time', models.FloatField(blank=True, null=True)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sombrasv2', to='levels.Header')),
            ],
            options={
                'verbose_name': 'sombras',
            },
        ),
    ]
